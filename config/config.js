import {connectorsForWallets} from '@rainbow-me/rainbowkit';
import {WagmiProvider, createConfig, http} from 'wagmi';

import {
  rainbowWallet,
  walletConnectWallet,
  coinbaseWallet,
  argentWallet,
  bifrostWallet,
  bitgetWallet,
  bitskiWallet,
  braveWallet,
  clvWallet,
  coin98Wallet,
  coreWallet,
  dawnWallet,
  desigWallet,
  enkryptWallet,
  foxWallet,
  frameWallet,
  frontierWallet,
  imTokenWallet,
  injectedWallet,
  ledgerWallet,
  metaMaskWallet,
  mewWallet,
  oktoWallet,
  okxWallet,
  omniWallet,
  oneKeyWallet,
  phantomWallet,
  rabbyWallet,
  safeWallet,
  safeheronWallet,
  safepalWallet,
  subWallet,
  tahoWallet,
  talismanWallet,
  tokenaryWallet,
  tokenPocketWallet,
  trustWallet,
  uniswapWallet,
  xdefiWallet,
  zealWallet,
  zerionWallet,
} from '@rainbow-me/rainbowkit/wallets';
import {
  arbitrum,
  base,
  mainnet,
  optimism,
  sepolia,
  goerli,
  zora,
} from 'wagmi/chains';
const connectors = connectorsForWallets(
  [
    {
      groupName: 'Recommended',
      wallets: [
        metaMaskWallet,
        walletConnectWallet,
        coinbaseWallet,
        ledgerWallet,
        safepalWallet,
      ],
    },
    {
      groupName: 'Other',
      wallets: [
        trustWallet,
        uniswapWallet,
        argentWallet,
        bifrostWallet,
        bitgetWallet,
        bitskiWallet,
        braveWallet,
        clvWallet,
        coin98Wallet,
        injectedWallet,
        coreWallet,
        dawnWallet,
        desigWallet,
        enkryptWallet,
        foxWallet,
        frameWallet,
        frontierWallet,
        imTokenWallet,
        ledgerWallet,
        metaMaskWallet,
        mewWallet,
        oktoWallet,
        okxWallet,
        omniWallet,
        oneKeyWallet,
        phantomWallet,
        rabbyWallet,
        safeWallet,
        safeheronWallet,
        subWallet,
        tahoWallet,
        talismanWallet,
        tokenaryWallet,
        tokenPocketWallet,
        xdefiWallet,
        zealWallet,
        zerionWallet,
        rainbowWallet,
      ],
    },
  ],
  {
    appName: 'PhenX',
    projectId: '0aef2c24e12ca37c7ee7ee5f5bd8f56e',
  }
);
const config = createConfig({
  connectors,
  chains: [mainnet, base],

  transports: {
    [mainnet.id]: http(process.env.NEXT_PUBLIC_ETH_RPC),

    [base.id]: http(process.env.NEXT_PUBLIC_BASE_RPC),
  },
});
export default config;
